{"version":3,"file":"index.modern.js","sources":["../index.js"],"sourcesContent":["const iClass = \"custom-control-input\";\nconst lClass = \"custom-control-label\";\nconst gClass = \"form-group\";\nconst cClass = \"form-control\";\nconst bClass = \"btn btn-primary\";\n\nconst parseFormInputs = ({ elements }) => {\n  const result = {};\n  for (const { type, name, checked, selectedOptions, value } of elements) {\n    if (type === \"select-multiple\") {\n      result[name] = [];\n      for (const { value } of selectedOptions) result[name].push(value);\n    } else if (type === \"checkbox\") {\n      if (!result[name]) result[name] = [];\n      if (checked) result[name].push(value);\n    } else if (type !== \"submit\" && (!(type === \"radio\") || checked)) {\n      result[name] = value;\n    }\n  }\n  return result;\n};\n\nconst omit = (fields) => (obj) =>\n  Object.fromEntries(\n    Object.entries(obj).filter(([key]) => !fields.includes(key))\n  );\n\nconst fromExtraTerse = (field) => {\n  let f = field;\n  if (typeof f === \"string\") return { ezTitle: f };\n  if (Array.isArray(f)) f = { ezTitle: f[0], children: f[1] };\n  if (Array.isArray(f.children))\n    return {\n      ...f,\n      children: f.children.map((option) =>\n        typeof option === \"string\" ? { label: option } : option\n      ),\n    };\n  return f;\n};\n\n// ezForm factory export for testing and backwards compatibility\n\nconst ezForm = (h, { idPrefix = \"\" } = {}) => {\n  const idP = idPrefix;\n  const FormGroup = ({ children, ...props }) =>\n    h(\"div\", { className: gClass, ...props }, ...children);\n\n  const TickBox = ({ type, name, id, label, value = label, ...props }) => {\n    const className = `custom-control custom-${type} custom-control-inline`;\n    return h(\n      \"div\",\n      { className, key: id },\n      h(\"input\", { id, name, className: iClass, type, value, ...props }),\n      h(\"label\", { htmlFor: id, className: lClass }, label)\n    );\n  };\n\n  const TickBoxes = ({ type, name, key, label, children, ...props }) => {\n    type = type || \"checkbox\";\n    const xChildren = children.map((cProps, i) =>\n      TickBox({ type, name, ...props, id: idP + name + \"_\" + i, ...cProps })\n    );\n\n    return FormGroup({\n      key,\n      children: [\n        label && h(\"label\", null, label),\n        h(\"div\", null, ...xChildren),\n      ],\n    });\n  };\n\n  const SelectBox = ({ name, key, label, children, ...props }) => {\n    delete props.type;\n    const xChildren = children.map(({ label, value = label, ...cProps }, i) => {\n      const id = idP + name + \"_\" + i;\n      return h(\"option\", { id, key: id, value, ...cProps }, label);\n    });\n\n    return FormGroup({\n      key,\n      children: [\n        label && h(\"label\", { htmlFor: props.id }, label),\n        h(\"select\", { name, ...props }, ...xChildren),\n      ],\n    });\n  };\n\n  const inferType = (name) => {\n    name = name.toLowerCase();\n    const types = [\"number\", \"email\", \"textarea\", \"submit\"];\n    return types.find((v) => name.includes(v)) || \"text\";\n  };\n\n  const Text = ({ name, type = inferType(name), key, label, ...props }) => {\n    //type = type || inferType(name);\n    const children =\n      type === \"submit\"\n        ? [\n            h(\"input\", {\n              type,\n              name,\n              ...props,\n              value: label,\n              className: bClass,\n            }),\n          ]\n        : [\n            label && h(\"label\", { htmlFor: props.id }, label),\n            type === \"textarea\"\n              ? h(\"textarea\", { name, ...omit([\"value\"])(props) }, props.value)\n              : h(\"input\", { type, name, ...props }),\n          ];\n    return FormGroup({ key, children });\n  };\n\n  const Field = ({\n    ezTitle,\n    ezState,\n    label = ezTitle,\n    placeholder = ezTitle,\n    name = (ezTitle || placeholder).replace(/ /g, \"_\").toLowerCase(),\n    id = idP + name,\n    key = id,\n    children,\n    ...props\n  }) => {\n    if (ezState && !props.value) props.value = ezState[name] || \"\";\n    const className = cClass;\n    if (children) {\n      return props.type === \"select\"\n        ? SelectBox({ label, key, id, name, children, className, ...props })\n        : TickBoxes({ label, key, id, name, children, ...props });\n    } else {\n      return Text({ label, key, id, name, placeholder, className, ...props });\n    }\n  };\n\n  const Form = ({ onSubmit, children, ...props }) => {\n    if (onSubmit)\n      props.onSubmit = (e) => {\n        e.preventDefault();\n        onSubmit(parseFormInputs(e.target));\n      };\n    return h(\"form\", props, ...children);\n  };\n\n  return { Field, Form };\n};\n\nexport { ezForm, fromExtraTerse, parseFormInputs };\n"],"names":["parseFormInputs","elements","result","type","name","checked","selectedOptions","value","push","fromExtraTerse","field","f","ezTitle","Array","isArray","children","map","option","label","ezForm","h","idPrefix","idP","FormGroup","props","className","inferType","toLowerCase","find","v","includes","Field","ezState","placeholder","replace","id","key","xChildren","cProps","i","htmlFor","SelectBox","TickBox","TickBoxes","fields","obj","Object","fromEntries","entries","filter","Text","Form","onSubmit","e","preventDefault","target"],"mappings":"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"}