{"version":3,"file":"ezform.module.js","sources":["../src/ezform.js"],"sourcesContent":["const iClass = \"custom-control-input\";\nconst lClass = \"custom-control-label\";\nconst gClass = \"form-group\";\nconst cClass = \"form-control\";\nconst bClass = \"btn btn-primary\";\n\nconst parseFormInputs = ({ elements }) => {\n  const result = {};\n  for (const { type, name, checked, selectedOptions, value } of elements) {\n    if (type === \"select-multiple\") {\n      result[name] = [];\n      for (const { value } of selectedOptions) result[name].push(value);\n    } else if (type === \"checkbox\") {\n      if (!result[name]) result[name] = [];\n      if (checked) result[name].push(value);\n    } else if (type !== \"submit\" && (!(type === \"radio\") || checked)) {\n      result[name] = value;\n    }\n  }\n  return result;\n};\n\nconst omit = (fields) => (obj) =>\n  Object.fromEntries(\n    Object.entries(obj).filter(([key]) => !fields.includes(key))\n  );\n\nconst fromExtraTerse = (field) => {\n  let f = field;\n  if (typeof f === \"string\") return { ezTitle: f };\n  if (Array.isArray(f)) f = { ezTitle: f[0], children: f[1] };\n  if (Array.isArray(f.children))\n    return {\n      ...f,\n      children: f.children.map((option) =>\n        typeof option === \"string\" ? { label: option } : option\n      ),\n    };\n  return f;\n};\n\n// ezForm factory export for testing and backwards compatibility\n\nconst ezForm = (h, { idPrefix = \"\" } = {}) => {\n  const idP = idPrefix;\n  const FormGroup = ({ children, ...props }) =>\n    h(\"div\", { className: gClass, ...props }, ...children);\n\n  const TickBox = ({ type, name, id, label, value = label, ...props }) => {\n    const className = `custom-control custom-${type} custom-control-inline`;\n    return h(\n      \"div\",\n      { className, key: id },\n      h(\"input\", { id, name, className: iClass, type, value, ...props }),\n      h(\"label\", { htmlFor: id, className: lClass }, label)\n    );\n  };\n\n  const TickBoxes = ({ type, name, key, label, children, ...props }) => {\n    type = type || \"checkbox\";\n    const xChildren = children.map((cProps, i) =>\n      TickBox({ type, name, ...props, id: idP + name + \"_\" + i, ...cProps })\n    );\n\n    return FormGroup({\n      key,\n      children: [\n        label && h(\"label\", null, label),\n        h(\"div\", null, ...xChildren),\n      ],\n    });\n  };\n\n  const SelectBox = ({ name, key, label, children, ...props }) => {\n    delete props.type;\n    const xChildren = children.map(({ label, value = label, ...cProps }, i) => {\n      const id = idP + name + \"_\" + i;\n      return h(\"option\", { id, key: id, value, ...cProps }, label);\n    });\n\n    return FormGroup({\n      key,\n      children: [\n        label && h(\"label\", { htmlFor: props.id }, label),\n        h(\"select\", { name, ...props }, ...xChildren),\n      ],\n    });\n  };\n\n  const inferType = (name) => {\n    name = name.toLowerCase();\n    const types = [\"number\", \"email\", \"textarea\", \"submit\"];\n    return types.find((v) => name.includes(v)) || \"text\";\n  };\n\n  const Text = ({ name, type = inferType(name), key, label, ...props }) => {\n    //type = type || inferType(name);\n    const children =\n      type === \"submit\"\n        ? [\n            h(\"input\", {\n              type,\n              name,\n              ...props,\n              value: label,\n              className: bClass,\n            }),\n          ]\n        : [\n            label && h(\"label\", { htmlFor: props.id }, label),\n            type === \"textarea\"\n              ? h(\"textarea\", { name, ...omit([\"value\"])(props) }, props.value)\n              : h(\"input\", { type, name, ...props }),\n          ];\n    return FormGroup({ key, children });\n  };\n\n  const Field = ({\n    ezTitle,\n    ezState,\n    label = ezTitle,\n    placeholder = ezTitle,\n    name = (ezTitle || placeholder).replace(/ /g, \"_\").toLowerCase(),\n    id = idP + name,\n    key = id,\n    children,\n    ...props\n  }) => {\n    if (ezState && !props.value) props.value = ezState[name] || \"\";\n    const className = cClass;\n    if (children) {\n      return props.type === \"select\"\n        ? SelectBox({ label, key, id, name, children, className, ...props })\n        : TickBoxes({ label, key, id, name, children, ...props });\n    } else {\n      return Text({ label, key, id, name, placeholder, className, ...props });\n    }\n  };\n\n  const Form = ({ onSubmit, children, ...props }) => {\n    if (onSubmit)\n      props.onSubmit = (e) => {\n        e.preventDefault();\n        onSubmit(parseFormInputs(e.target));\n      };\n    return h(\"form\", props, ...children);\n  };\n\n  return { Field, Form };\n};\n\nexport { ezForm, fromExtraTerse, parseFormInputs };\n"],"names":["parseFormInputs","result","elements","type","name","checked","selectedOptions","value","push","fromExtraTerse","field","f","ezTitle","Array","isArray","children","map","option","label","ezForm","h","idPrefix","idP","FormGroup","props","className","Field","ezState","placeholder","replace","toLowerCase","id","key","xChildren","i","cProps","htmlFor","SelectBox","TickBox","TickBoxes","fields","find","v","includes","inferType","obj","Object","fromEntries","entries","filter","Text","Form","onSubmit","e","preventDefault","target"],"mappings":"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"}